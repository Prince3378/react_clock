{"version":3,"sources":["Clock.tsx","App.tsx","index.tsx"],"names":["Clock","state","date","Date","timerId","this","window","setInterval","setState","prevProps","clockName","props","console","log","clearInterval","className","toLocaleTimeString","React","Component","getRandomName","value","Math","random","toString","slice","App","hasClock","document","addEventListener","ReactDOM","render","getElementById"],"mappings":"sNAUaA,EAAb,4MACEC,MAAQ,CACNC,KAAM,IAAIC,MAFd,EAKEC,QAAU,EALZ,uDAOE,WAAqB,IAAD,OAClBC,KAAKD,QAAUE,OAAOC,aAAY,WAChC,EAAKC,SAAS,CAAEN,KAAM,IAAIC,SACzB,OAVP,gCAaE,SAAmBM,GACbA,EAAUC,YAAcL,KAAKM,MAAMD,WAErCE,QAAQC,IAAIJ,EAAUC,UAAW,MAAOL,KAAKM,MAAMD,aAhBzD,kCAoBE,WACEI,cAAcT,KAAKD,WArBvB,oBAwBE,WACE,IAAQF,EAASG,KAAKJ,MAAdC,KAER,OACE,qBAAKa,UAAU,QAAf,SACE,qBAAKA,UAAU,UAAf,SACGb,EAAKc,6BA9BhB,GAA2BC,IAAMC,WCNjC,SAASC,IACP,IAAMC,EAAQC,KAAKC,SAASC,WAAWC,MAAM,EAAG,GAEhD,MAAM,SAAN,OAAgBJ,G,IAQZK,E,4MACJxB,MAAQ,CACNS,UAAWS,IACXO,UAAU,G,EAGZtB,QAAUG,aAAY,WACpB,EAAKC,SAAS,CAAEE,UAAWS,QAC1B,M,uDAEH,WAAqB,IAAD,OAClBQ,SAASC,iBAAiB,eAAe,WACvC,EAAKpB,SAAS,CAAEkB,UAAU,OAE5BC,SAASC,iBAAiB,SAAS,WACjC,EAAKpB,SAAS,CAAEkB,UAAU,S,kCAI9B,WACEZ,cAAcT,KAAKD,W,oBAGrB,WACE,MAAgCC,KAAKJ,MAA7ByB,EAAR,EAAQA,SAAUhB,EAAlB,EAAkBA,UAElB,OACE,sBAAKK,UAAU,MAAf,UACE,6CACA,8BACGW,EAEG,qCACE,iCAAShB,IACT,cAAC,EAAD,CAAOA,UAAWA,OAGpB,Y,GArCIO,IAAMC,WA4CTO,ICxDfI,IAASC,OACP,cAAC,EAAD,IACAH,SAASI,eAAe,W","file":"static/js/main.872a694c.chunk.js","sourcesContent":["import React from 'react';\n\ntype State = {\n  date: Date,\n};\n\ntype Props = {\n  clockName: string;\n};\n\nexport class Clock extends React.Component<Props, State> {\n  state = {\n    date: new Date(),\n  };\n\n  timerId = 0;\n\n  componentDidMount() {\n    this.timerId = window.setInterval(() => {\n      this.setState({ date: new Date() });\n    }, 1000);\n  }\n\n  componentDidUpdate(prevProps: Props) {\n    if (prevProps.clockName !== this.props.clockName) {\n      // eslint-disable-next-line no-console\n      console.log(prevProps.clockName, '---', this.props.clockName);\n    }\n  }\n\n  componentWillUnmount() {\n    clearInterval(this.timerId);\n  }\n\n  render() {\n    const { date } = this.state;\n\n    return (\n      <div className=\"clock\">\n        <div className=\"numbers\">\n          {date.toLocaleTimeString()}\n        </div>\n      </div>\n\n    );\n  }\n}\n","import React from 'react';\nimport './App.scss';\nimport { Clock } from './Clock';\n\nfunction getRandomName(): string {\n  const value = Math.random().toString().slice(2, 5);\n\n  return `Clock-${value}`;\n}\n\ntype State = {\n  clockName: string;\n  hasClock: boolean;\n};\n\nclass App extends React.Component<{}, State> {\n  state = {\n    clockName: getRandomName(),\n    hasClock: true,\n  };\n\n  timerId = setInterval(() => {\n    this.setState({ clockName: getRandomName() });\n  }, 3300);\n\n  componentDidMount() {\n    document.addEventListener('contextmenu', () => {\n      this.setState({ hasClock: false });\n    });\n    document.addEventListener('click', () => {\n      this.setState({ hasClock: true });\n    });\n  }\n\n  componentWillUnmount() {\n    clearInterval(this.timerId);\n  }\n\n  render() {\n    const { hasClock, clockName } = this.state;\n\n    return (\n      <div className=\"App\">\n        <h1>React clock</h1>\n        <div>\n          {hasClock\n            ? (\n              <>\n                <strong>{clockName}</strong>\n                <Clock clockName={clockName} />\n              </>\n            )\n            : ''}\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}