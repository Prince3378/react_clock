{"version":3,"sources":["Clock.tsx","App.tsx","index.tsx"],"names":["getRandomName","value","Math","random","toString","slice","Clock","state","clockName","date","Date","timerId","this","window","setInterval","setState","prevProps","console","log","clearInterval","className","toLocaleTimeString","React","Component","App","hasClock","document","addEventListener","ReactDOM","render","getElementById"],"mappings":"sNAEA,SAASA,IACP,IAAMC,EAAQC,KAAKC,SAASC,WAAWC,MAAM,EAAG,GAEhD,MAAM,SAAN,OAAgBJ,GAQX,IAAMK,EAAb,4MACEC,MAAQ,CACNC,UAAWR,IACXS,KAAM,IAAIC,MAHd,EAMEC,QAAU,EANZ,uDAQE,WAAqB,IAAD,OAClBC,KAAKD,QAAUE,OAAOC,aAAY,WAChC,EAAKC,SAAS,CAAEN,KAAM,IAAIC,SACzB,KACHE,KAAKD,QAAUE,OAAOC,aAAY,WAChC,EAAKC,SAAS,CAAEP,UAAWR,QAC1B,QAdP,gCAiBE,SAAmBgB,GACbA,EAAUR,YAAcI,KAAKL,MAAMC,WAErCS,QAAQC,IAAIF,EAAUR,UAAW,MAAOI,KAAKL,MAAMC,aApBzD,kCAwBE,WACEW,cAAcP,KAAKD,WAzBvB,oBA4BE,WACE,MAA4BC,KAAKL,MAAzBC,EAAR,EAAQA,UAAWC,EAAnB,EAAmBA,KAEnB,OACE,sBAAKW,UAAU,QAAf,UACE,iCAASZ,IACR,YACD,qBAAKY,UAAU,UAAf,SACGX,EAAKY,8BApChB,GAA2BC,IAAMC,WCL3BC,E,4MACJjB,MAAQ,CACNkB,UAAU,G,uDAGZ,WAAqB,IAAD,OAClBC,SAASC,iBAAiB,eAAe,WACvC,EAAKZ,SAAS,CAAEU,UAAU,OAE5BC,SAASC,iBAAiB,SAAS,WACjC,EAAKZ,SAAS,CAAEU,UAAU,S,oBAI9B,WACE,IAAQA,EAAab,KAAKL,MAAlBkB,SAER,OACE,sBAAKL,UAAU,MAAf,UACE,6CACA,8BACIK,GAAY,cAAC,EAAD,a,GArBNH,IAAMC,WA4BTC,ICjCfI,IAASC,OACP,cAAC,EAAD,IACAH,SAASI,eAAe,W","file":"static/js/main.4163e2a8.chunk.js","sourcesContent":["import React from 'react';\n\nfunction getRandomName(): string {\n  const value = Math.random().toString().slice(2, 5);\n\n  return `Clock-${value}`;\n}\n\ntype State = {\n  clockName: string;\n  date: Date,\n};\n\nexport class Clock extends React.Component<{}, State> {\n  state = {\n    clockName: getRandomName(),\n    date: new Date(),\n  };\n\n  timerId = 0;\n\n  componentDidMount() {\n    this.timerId = window.setInterval(() => {\n      this.setState({ date: new Date() });\n    }, 1000);\n    this.timerId = window.setInterval(() => {\n      this.setState({ clockName: getRandomName() });\n    }, 3300);\n  }\n\n  componentDidUpdate(prevProps: State) {\n    if (prevProps.clockName !== this.state.clockName) {\n      // eslint-disable-next-line no-console\n      console.log(prevProps.clockName, '---', this.state.clockName);\n    }\n  }\n\n  componentWillUnmount() {\n    clearInterval(this.timerId);\n  }\n\n  render() {\n    const { clockName, date } = this.state;\n\n    return (\n      <div className=\"clock\">\n        <strong>{clockName}</strong>\n        {' time is '}\n        <div className=\"numbers\">\n          {date.toLocaleTimeString()}\n        </div>\n      </div>\n\n    );\n  }\n}\n","import React from 'react';\nimport './App.scss';\nimport { Clock } from './Clock';\n\ntype State = {\n  hasClock: boolean;\n};\n\nclass App extends React.Component<{}, State> {\n  state = {\n    hasClock: true,\n  };\n\n  componentDidMount() {\n    document.addEventListener('contextmenu', () => {\n      this.setState({ hasClock: false });\n    });\n    document.addEventListener('click', () => {\n      this.setState({ hasClock: true });\n    });\n  }\n\n  render() {\n    const { hasClock } = this.state;\n\n    return (\n      <div className=\"App\">\n        <h1>React clock</h1>\n        <div>\n          { hasClock && <Clock />}\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}