{"version":3,"sources":["Clock.tsx","App.tsx","index.tsx"],"names":["getRandomName","value","Math","random","toString","slice","Clock","state","clockName","date","Date","timerId","this","window","setInterval","setState","prevProps","props","console","log","clearInterval","className","toLocaleTimeString","React","Component","App","hasClock","document","addEventListener","ReactDOM","render","getElementById"],"mappings":"sNAEA,SAASA,IACP,IAAMC,EAAQC,KAAKC,SAASC,WAAWC,MAAM,EAAG,GAEhD,MAAM,SAAN,OAAgBJ,GAYX,IAAMK,EAAb,4MACEC,MAAQ,CACNC,UAAWR,IACXS,KAAM,IAAIC,MAHd,EAMEC,QAAU,EANZ,uDAQE,WAAqB,IAAD,OAClBC,KAAKD,QAAUE,OAAOC,aAAY,WAChC,EAAKC,SAAS,CAAEN,KAAM,IAAIC,SACzB,KACHE,KAAKD,QAAUE,OAAOC,aAAY,WAChC,EAAKC,SAAS,CAAEP,UAAWR,QAC1B,QAdP,gCAiBE,SAAmBgB,GACbA,EAAUR,YAAcI,KAAKK,MAAMT,WAErCU,QAAQC,IAAIH,EAAUR,UAAW,MAAOI,KAAKK,MAAMT,aApBzD,kCAwBE,WACEY,cAAcR,KAAKD,WAzBvB,oBA4BE,WACE,OACE,sBAAKU,UAAU,QAAf,UACE,iCAAST,KAAKL,MAAMC,YACnB,YACD,qBAAKa,UAAU,UAAf,SACGT,KAAKL,MAAME,KAAKa,8BAlC3B,GAA2BC,IAAMC,WCT3BC,E,4MACJlB,MAAQ,CACNmB,UAAU,G,uDAGZ,WAAqB,IAAD,OAClBC,SAASC,iBAAiB,eAAe,WACvC,EAAKb,SAAS,CAAEW,UAAU,OAE5BC,SAASC,iBAAiB,SAAS,WACjC,EAAKb,SAAS,CAAEW,UAAU,S,oBAI9B,WACE,IAAQA,EAAad,KAAKL,MAAlBmB,SAER,OACE,sBAAKL,UAAU,MAAf,UACE,6CACA,8BACIK,GAAY,cAAC,EAAD,a,GArBNH,IAAMC,WA4BTC,ICjCfI,IAASC,OACP,cAAC,EAAD,IACAH,SAASI,eAAe,W","file":"static/js/main.b160aa11.chunk.js","sourcesContent":["import React from 'react';\n\nfunction getRandomName(): string {\n  const value = Math.random().toString().slice(2, 5);\n\n  return `Clock-${value}`;\n}\n\ntype Props = {\n  clockName?: string;\n};\n\ntype State = {\n  clockName: string;\n  date: Date,\n};\n\nexport class Clock extends React.Component<Props, State> {\n  state = {\n    clockName: getRandomName(),\n    date: new Date(),\n  };\n\n  timerId = 0;\n\n  componentDidMount() {\n    this.timerId = window.setInterval(() => {\n      this.setState({ date: new Date() });\n    }, 1000);\n    this.timerId = window.setInterval(() => {\n      this.setState({ clockName: getRandomName() });\n    }, 3300);\n  }\n\n  componentDidUpdate(prevProps: Props) {\n    if (prevProps.clockName !== this.props.clockName) {\n      // eslint-disable-next-line no-console\n      console.log(prevProps.clockName, '---', this.props.clockName);\n    }\n  }\n\n  componentWillUnmount() {\n    clearInterval(this.timerId);\n  }\n\n  render() {\n    return (\n      <div className=\"clock\">\n        <strong>{this.state.clockName}</strong>\n        {' time is '}\n        <div className=\"numbers\">\n          {this.state.date.toLocaleTimeString()}\n        </div>\n      </div>\n\n    );\n  }\n}\n","import React from 'react';\nimport './App.scss';\nimport { Clock } from './Clock';\n\ntype State = {\n  hasClock: boolean;\n};\n\nclass App extends React.Component<{}, State> {\n  state = {\n    hasClock: true,\n  };\n\n  componentDidMount() {\n    document.addEventListener('contextmenu', () => {\n      this.setState({ hasClock: false });\n    });\n    document.addEventListener('click', () => {\n      this.setState({ hasClock: true });\n    });\n  }\n\n  render() {\n    const { hasClock } = this.state;\n\n    return (\n      <div className=\"App\">\n        <h1>React clock</h1>\n        <div>\n          { hasClock && <Clock />}\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}